$Button = {
  color: {
    text: $palette.white,
    bg: $palette.coolBlue
  }
}

.Button {
  @extend $resetButton;
  padding: 5px;
  cursor: pointer;
  display: inline-block;
  opacity: 1;
  transition: all 170ms ease;
  position: relative;

  &__inner {
    display: inline-block;
    color: $Button.color.text;
    font-weight: normal;
    padding: 6px 10px;
    border-radius: 4px;
    background-color: $Button.color.bg;
    box-shadow: 0 $uiThickness 0 darken($Button.color.bg, 30%), 0 unit($uiThickness + 5, 'px') 5px 0 $palette.darkGrey;
    margin-bottom: $uiThickness; // Compensation for shadow
    remFontSize($fontSize.small);
    transition: all 125ms ease;

    [class^="wgf-icon-"] {
      display: inline-block;
      margin-right: 5px;
      font-size: 1.4em;
      line-height: inherit;
    }

    &__text,
    [class^="wgf-icon-"] {
      vertical-align: text-bottom;
    }
  }

  &__clickZone {
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }

  &:hover:not([disabled]),
  &:focus {
    .Button__inner {
      background-color: lighten($Button.color.bg, 10%);
      box-shadow: 0 $uiThickness 0 darken($Button.color.bg, 20%), 0 unit($uiThickness + 5, 'px') 5px 0 $palette.darkGrey;
    }
  }

  // Modifier full width
  &--full {
    .Button__inner {
      display: block;
      width: 100%;
    }
  }

  // Twitter version
  &--twitter {
    .Button__inner {
      background-color: $specialePalette.twitter;
      box-shadow: 0 $uiThickness 0 darken($specialePalette.twitter, 30%), 0 unit($uiThickness + 5, 'px') 5px 0 $palette.darkGrey;
    }
    &:hover:not([disabled]),
    &:focus {
      .Button__inner {
        background-color: lighten($specialePalette.twitter, 10%);
        box-shadow: 0 $uiThickness 0 darken($specialePalette.twitter, 20%), 0 unit($uiThickness + 5, 'px') 5px 0 $palette.darkGrey;
      }
    }
  }

  // Facebook version
  &--facebook {
    .Button__inner {
      background-color: $specialePalette.facebook;
      box-shadow: 0 $uiThickness 0 darken($specialePalette.facebook, 30%), 0 unit($uiThickness + 5, 'px') 5px 0 $palette.darkGrey;
    }
    &:hover:not([disabled]),
    &:focus {
      .Button__inner {
        background-color: lighten($specialePalette.facebook, 10%);
        box-shadow: 0 $uiThickness 0 darken($specialePalette.facebook, 20%), 0 unit($uiThickness + 5, 'px') 5px 0 $palette.darkGrey;
      }
    }
  }

  // Youtube version
  &--youtube {
    .Button__inner {
      background-color: $specialePalette.youtube;
      box-shadow: 0 $uiThickness 0 darken($specialePalette.youtube, 30%), 0 unit($uiThickness + 5, 'px') 5px 0 $palette.darkGrey;
    }
    &:hover:not([disabled]),
    &:focus {
      .Button__inner {
        background-color: lighten($specialePalette.youtube, 10%);
        box-shadow: 0 $uiThickness 0 darken($specialePalette.youtube, 20%), 0 unit($uiThickness + 5, 'px') 5px 0 $palette.darkGrey;
      }
    }
  }

    // Youtube version
    &--steam {
      .Button__inner {
        background-color: $specialePalette.steam;
        box-shadow: 0 $uiThickness 0 darken($specialePalette.steam, 30%), 0 unit($uiThickness + 5, 'px') 5px 0 $palette.darkGrey;
      }
      &:hover:not([disabled]),
      &:focus {
        .Button__inner {
          background-color: lighten($specialePalette.steam, 10%);
          box-shadow: 0 $uiThickness 0 darken($specialePalette.steam, 20%), 0 unit($uiThickness + 5, 'px') 5px 0 $palette.darkGrey;
        }
      }
    }

  // Push Versions
  &--push,
  &--pushForward {
    .Button__inner {
      remFontSize($fontSize.medium);
      padding: 10px 15px;
    }
  }

  // PushForward version
  &--pushForward {
    .Button__inner {
      padding: 16px 27px;
    }
  }

  // callToAction version
  &--callToAction {
    .Button__inner {
      background: linear-gradient(109deg, $palette.orangeRed, $palette.tomatoRed);
      box-shadow: 0 $uiThickness 0 darken($palette.tomatoRed, 20%), 0 unit($uiThickness + 5, 'px') 5px 0 $palette.darkGrey;
    }
    &:hover:not([disabled]),
    &:focus {
      .Button__inner {
        background: linear-gradient(109deg, lighten($palette.orangeRed, 10%), lighten($palette.tomatoRed, 10%));
        box-shadow: 0 $uiThickness 0 darken($palette.tomatoRed, 10%), 0 unit($uiThickness + 5, 'px') 5px 0 $palette.darkGrey;
      }
    }
  }

  // Cancel version
  &--cancel {
    .Button__inner {
      background: linear-gradient(109deg, lighten($palette.charcoalGrey, 60%), lighten($palette.charcoalGrey, 50%));
      box-shadow: 0 $uiThickness 0 lighten($palette.charcoalGrey, 40%), 0 unit($uiThickness + 5, 'px') 5px 0 $palette.darkGrey;
    }
    &:hover:not([disabled]),
    &:focus {
      .Button__inner {
        background: linear-gradient(109deg, lighten($palette.charcoalGrey, 65%), lighten($palette.charcoalGrey, 55%));
        box-shadow: 0 $uiThickness 0 lighten($palette.charcoalGrey, 45%), 0 unit($uiThickness + 5, 'px') 5px 0 $palette.darkGrey;
      }
    }
  }

  &:active:not([disabled]) {
    .Button__inner {
      transform: translateY($uiThickness);
      box-shadow: none;
    }
  }

  &[disabled] {
    opacity: .4;
  }

  .state--hover {
    display: none;
  }

  &:hover,
  &:focus {
    .state--default {
      display: none;
    }

    .state--hover {
      display: inline;
    }
  }
}

.iconButton {
  @extend $resetButton;
  text-decoration none
  display inline-block
  width 40px
  height 40px
  color #fff
  line-height 40px
  font-size 20px
  text-align center
  border-radius 50%
  background-color: $Button.color.bg;
  transition all ease 500ms

  &--alt {
    background-color #50E3C2;
  }
}
